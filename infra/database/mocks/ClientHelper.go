// Code generated by mockery v2.1.0. DO NOT EDIT.

package mocks

import (
	database "b2w/swapi-challenge/infra/database"
	context "context"

	mock "github.com/stretchr/testify/mock"

	readpref "go.mongodb.org/mongo-driver/mongo/readpref"
)

// ClientHelper is an autogenerated mock type for the ClientHelper type
type ClientHelper struct {
	mock.Mock
}

// Connect provides a mock function with given fields: _a0
func (_m *ClientHelper) Connect(_a0 context.Context) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Database provides a mock function with given fields: _a0
func (_m *ClientHelper) Database(_a0 string) database.DatabaseHelper {
	ret := _m.Called(_a0)

	var r0 database.DatabaseHelper
	if rf, ok := ret.Get(0).(func(string) database.DatabaseHelper); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(database.DatabaseHelper)
		}
	}

	return r0
}

// Disconnect provides a mock function with given fields: _a0
func (_m *ClientHelper) Disconnect(_a0 context.Context) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Ping provides a mock function with given fields: _a0, _a1
func (_m *ClientHelper) Ping(_a0 context.Context, _a1 *readpref.ReadPref) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *readpref.ReadPref) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
